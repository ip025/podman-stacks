services:
  web:
    #build: ./frontend/
    image: ghcr.io/seanmorley15/adventurelog-frontend:v0.11.0
    container_name: adventurelog-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-8015}:3000"
    depends_on:
      - server
    environment:
      PUBLIC_SERVER_URL: ${PUBLIC_SERVER_URL}
      ORIGIN: ${ORIGIN}
      BODY_SIZE_LIMIT: ${BODY_SIZE_LIMIT}
      FRONTEND_PORT: ${FRONTEND_PORT}

  db:
    image: postgis/postgis:17-3.5
    container_name: adventurelog-db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      PGHOST: ${PGHOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  server:
    #build: ./backend/
    image: ghcr.io/seanmorley15/adventurelog-backend:v0.11.0
    container_name: adventurelog-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT:-8016}:80"
    depends_on:
      - db
    volumes:
      - adventurelog_media:/code/media/
    environment:
      PGHOST: ${PGHOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_ADMIN_USERNAME: ${DJANGO_ADMIN_USERNAME}
      DJANGO_ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
      DJANGO_ADMIN_EMAIL: ${DJANGO_ADMIN_EMAIL}
      PUBLIC_URL: ${PUBLIC_URL}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS}
      FRONTEND_URL: ${FRONTEND_URL}
      BACKEND_PORT: ${BACKEND_PORT}
      DEBUG: ${DEBUG}

volumes:
  postgres_data:
  adventurelog_media:
