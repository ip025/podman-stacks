---
version: "3"
services:
    unifi-network-application:
        image: lscr.io/linuxserver/unifi-network-application:9.3.45
        container_name: unifi-network-application
        depends_on:
            - unifi-db
        environment:
            - PUID=1000
            - PGID=1000
            - TZ=Europe/Berlin
            - MONGO_USER=unifi
            - MONGO_PASS=4importAnt#
            - MONGO_HOST=localhost
            - MONGO_PORT=27017
            - MONGO_DBNAME=unifi
            - MEM_LIMIT=1024 #optional
            - MEM_STARTUP=1024 #optional
            # - MONGO_TLS= #optional
            # - MONGO_AUTHSOURCE= #optional
        volumes:
            - unifi_data:/config
        # ports:
        #   - 0.0.0.0:8443:8443
        #   - 3478:3478/udp
        #   - 10001:10001/udp
        #   - 8080:8080
        #   - 1900:1900/udp #optional
        #   - 8843:8843 #optional
        #   - 8880:8880 #optional
        #   - 6789:6789 #optional
        #   - 5514:5514/udp #optional
        restart: unless-stopped
        network_mode: "host"
        # networks:
        #   - unifi
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: "1024M"

    unifi-db:
        image: docker.io/mongo:4.4.29
        container_name: unifi-db
        volumes:
            - mongo_data:/data/db
            # - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
        restart: unless-stopped
        network_mode: "host"
        # networks:
        #   - unifi
        healthcheck:
            test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
            interval: 10s
            timeout: 10s
            retries: 5
            start_period: 20s
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: "256M"

volumes:
    mongo_data:
    unifi_data:

networks:
    unifi:
